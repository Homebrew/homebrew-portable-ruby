name: GitHub Actions CI
on:
  push:
    branches: master
  pull_request: []
jobs:
  lint:
    name: Lint Dockerfile
    runs-on: ubuntu-latest
    steps:
    - name: Set up Git repository
      uses: actions/checkout@master
    - name: Check Dockerfile
      run: |
        docker run --rm -i hadolint/hadolint < Dockerfile

  test-mac:
    name: Build [macOS]
    runs-on: macOS-latest
    steps:
    - name: Set up Git repository
      uses: actions/checkout@master
    - name: Set up Homebrew
      run: |
        brew update-reset /usr/local/Homebrew
        ln -s "$PWD" "/usr/local/Homebrew/Library/Taps/homebrew/homebrew-portable-ruby"
    - name: Build Portable Ruby
      run: |
        mkdir -p bottle/
        cd bottle
        brew portable-package portable-ruby
    - name: Upload Portable Ruby
      uses: actions/upload-artifact@master
      with:
        name: portable-ruby-mac
        path: bottle
    - name: Test Portable Ruby
      run: |
        mkdir -p portable-ruby/
        tar --strip-components 2 -C portable-ruby -xf bottle/portable-ruby--*.tar.gz
        export HOMEBREW_DEVELOPER=1
        export HOMEBREW_RUBY_PATH=$PWD/portable-ruby/bin/ruby
        export HOMEBREW_LANGUAGES=en-US
        brew config
        brew tests

  test-linux:
    name: Build [Linux ${{ matrix.arch.name }}]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch:
          - { name: x86_64, platform: linux/amd64, build_img: 'debian/eol:wheezy' }
          - { name: arm32v6, platform: linux/arm/v6, build_img: 'resin/rpi-raspbian:wheezy' }
          - { name: arm64v8, platform: linux/arm64/v8, build_img: 'debian/eol:jessie' }
          - { name: ppc64le, platform: linux/ppc64le, build_img: 'debian/eol:jessie' }
    steps:
    - name: Set up Git repository
      uses: actions/checkout@master
    - name: Enable Docker experimental features
      run: |
        jq '.experimental=true' /etc/docker/daemon.json > daemon.json
        sudo mv daemon.json /etc/docker/daemon.json
        sudo systemctl restart docker
        docker version -f '{{.Server.Experimental}}'
    - name: Set up Docker multiarch
      run: |
        sudo docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
      if: matrix.arch.platform != 'linux/amd64'
    - name: Build Docker image
      run: |
        docker build -f Dockerfile --platform ${{ matrix.arch.platform }} --build-arg img=${{ matrix.arch.build_img }} -t homebrew-portable .
        docker build -f Dockerfile --platform ${{ matrix.arch.platform }} --build-arg img=ubuntu:xenial -t homebrew-portable-test .
    - name: Build Portable Ruby
      run: |
        docker run --name=homebrew-portable -w /bottle \
          -v $(pwd):/home/linuxbrew/.linuxbrew/Homebrew/Library/Taps/homebrew/homebrew-portable-ruby \
          homebrew-portable brew portable-package portable-ruby
        docker cp homebrew-portable:/bottle .
    - name: Upload Portable Ruby
      uses: actions/upload-artifact@master
      with:
        name: portable-ruby-${{ matrix.arch.name }}
        path: bottle
    - name: Test Portable Ruby
      run: |
        mkdir -p portable-ruby/
        tar --strip-components 2 -C portable-ruby -xf bottle/portable-ruby--*.tar.gz
        docker run --rm -v $(pwd):/data -e HOMEBREW_RUBY_PATH=/data/portable-ruby/bin/ruby \
          homebrew-portable-test /bin/bash -c "brew config && brew tests"
